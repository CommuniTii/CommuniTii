# TODO: Split up all authentication specific query/mutations into seperate schema
# extend type Query {
#   me: User!
#   isValidPasswordResetToken(token: String!): Boolean!
#   isUniqueUsername(userName: String!): Boolean!
# }

extend type Mutation {
  signIn(userName: String!, password: String!): String! # return JWT token after successful signin
  signUp(
    fName: String!
    lName: String!
    userName: String!
    email: String!
    password: String!
    isStudent: Boolean!
    schoolName: String
  ): String!
  # signOut(userName: String): Boolean!
  # changePassword(
  #   userId: String!
  #   oldPassword: String!
  #   newPassword: String!
  # ): Boolean!
  # resetPassword(resetToken: String!, newPassword: String!): Boolean!
  # refreshAccessToken(refreshToken: String!)
}

# unexposed fields
# passwordHash
# passwordResetToken
type User {
  id: ID!
  fName: String!
  lName: String!
  userName: String!
  email: String!
  isStudent: Boolean!
  schoolName: String
}
